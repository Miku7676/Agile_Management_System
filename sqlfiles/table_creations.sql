create database project_management_system;
use project_management_system;
CREATE TABLE USER (
    USER_ID VARCHAR(25) PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    CREATED_ON DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PROJECT (
    PROJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    START_DATE timestamp default current_timestamp,
    END_DATE DATE,
    PROJECT_MANAGER VARCHAR(25),  -- Foreign key referencing the USER table
    SCRUM_MASTER VARCHAR(25),     -- Foreign key referencing the USER table
    FOREIGN KEY (PROJECT_MANAGER) REFERENCES USER(USER_ID),
    FOREIGN KEY (SCRUM_MASTER) REFERENCES USER(USER_ID)
);

CREATE TABLE SPRINT (
    SPRINT_ID INT AUTO_INCREMENT PRIMARY KEY,
    PROJECT_ID INT NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    START_DT DATE NOT NULL,
    END_DT DATE,
    Description VARCHAR(150),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID)
);

CREATE TABLE TASK_STATUS (
    STATUS_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL
);

CREATE TABLE TASK (
    TASK_ID INT AUTO_INCREMENT PRIMARY KEY,
    STATUS_ID INT NOT NULL,
    PROJECT_ID INT NOT NULL,
    SPRINT_ID INT NOT NULL,
    TITLE VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    ASSIGNED_TO VARCHAR(25),
    FOREIGN KEY (STATUS_ID) REFERENCES TASK_STATUS(STATUS_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID),
    FOREIGN KEY (SPRINT_ID) REFERENCES SPRINT(SPRINT_ID),
    FOREIGN KEY (ASSIGNED_TO) REFERENCES USER(USER_ID)
);

CREATE TABLE COMMENT (
    COMMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID VARCHAR(25) NOT NULL,
    PROJECT_ID INT NOT NULL,
    CONTENT TEXT NOT NULL,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID)
);


CREATE TABLE PROJECT_WORKS_ON (
    USER_ID VARCHAR(25),
    PROJECT_ID INT,
    ROLE ENUM('Project_Manager','Scrum_Master','Member'),
    PRIMARY KEY (USER_ID, PROJECT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID)
);

CREATE TABLE audit_log (
    log_id INT AUTO_INCREMENT PRIMARY KEY,      -- Unique ID for each log entry
    table_name VARCHAR(255) NOT NULL,           -- Name of the table that was changed (e.g., projects, tasks)
    record_id INT NOT NULL,                    -- ID of the record that was modified
    action_type VARCHAR(50) NOT NULL,          -- Action performed: INSERT, UPDATE, DELETE
	message TEXT,
    change_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ALTER TABLE user
-- ADD COLUMN OAUTH_PROVIDER VARCHAR(20),
-- ADD COLUMN PROFILE_PICTURE VARCHAR(255),
-- ADD COLUMN CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
-- ADD COLUMN LAST_LOGIN DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
-- MODIFY COLUMN password VARCHAR(255) NULL;



